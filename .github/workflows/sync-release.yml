name: 'Publish to Release Repository'

on:
  release:
    types: [created] # LÃ¶st die Action nur aus, wenn ein neues Release erstellt wird

jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Development Repo'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Notwendig, um alle Tags und Branches zu holen

      - name: 'Checkout Release Repo'
        uses: actions/checkout@v4
        with:
          repository: 'wtl-public/hio-typo3-connector'
          token: ${{ secrets.RELEASE_REPO_TOKEN }}
          ref: main
          path: hio-release-repo
          fetch-depth: 0 # Notwendig, um alle Tags und Branches zu holen

      - name: ðŸ”„ Synchronize files
        run: |
          # LÃ¶scht alte Dateien im geklonten Release-Repo (auÃŸer .git-Verzeichnis)
          find hio-release-repo -mindepth 1 ! -name '.git' -exec rm -rf {} +
          # Kopiert alle Dateien (auÃŸer .git) vom Entwicklungs- ins Release-Repo
          rsync -av --progress . hio-release-repo/ --exclude .git --exclude .github

      - name: 'Configure Git and Push to Release Repo'
        env:
          RELEASE_REPO_TOKEN: ${{ secrets.RELEASE_REPO_TOKEN }}
        run: |
          # Wechsle in das Verzeichnis des Release-Repositories
          cd hio-release-repo
          
          # Konfiguriere Git mit dem Benutzer des Tokens (optional, aber gute Praxis)
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --unset-all http.https://github.com/.extraheader
          git add .
          
          # Commit nur, wenn es Ã„nderungen gibt
          if ! git diff --staged --quiet; then
            git commit -m "chore: Sync from development release ${{ github.event.release.tag_name }}"
            git push --force https://token:${{ secrets.RELEASE_REPO_TOKEN }}@github.com/wtl-public/hio-typo3-connector.git main
          else
            echo "Keine Ã„nderungen zum Committen."
          fi

      - name: 'Create Release in Release Repo'
        uses: softprops/action-gh-release@v2
        with:
          repository: 'wtl-public/hio-typo3-connector'
          token: ${{ secrets.RELEASE_REPO_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: ${{ github.event.release.name }}
          body: ${{ github.event.release.body }}
          prerelease: ${{ github.event.release.prerelease }}
          draft: false
