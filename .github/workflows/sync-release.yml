name: 'Publish to Release Repository'

on:
  release:
    types: [created] # Löst die Action nur aus, wenn ein neues Release erstellt wird

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Dev Repo'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Notwendig, um alle Tags und Branches zu holen

      - name: 'Configure Git and Push to Release Repo'
        env:
          RELEASE_REPO_TOKEN: ${{ secrets.RELEASE_REPO_TOKEN }}
        run: |
          # Konfiguriere Git mit dem Benutzer des Tokens (optional, aber gute Praxis)
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          
          # Füge das Remote-Repository HINZU, ABER MIT DEM TOKEN IN DER URL
          git remote add release_repo "https://${{ vars.RELEASE_USERNAME }}:${{ secrets.RELEASE_REPO_TOKEN }}@github.com/wtl-public/hio-typo3-connector.git"
          
          # Pushe den Code-Stand und den Tag
          # Wir pushen auf einen temporären Branch, um dann einen PR zu erstellen oder direkt zu mergen
          git push release_repo "${{ github.ref_name }}":main --force
          git push release_repo "${{ github.ref_name }}"

      - name: 'Create Release in Release Repo'
        uses: softprops/action-gh-release@v2
        with:
          repository: 'wtl-public/hio-typo3-connector' # Korrekt für die Ziel-Repo
          token: ${{ secrets.RELEASE_REPO_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: ${{ github.event.release.name }}
          body: ${{ github.event.release.body }}
          prerelease: ${{ github.event.release.prerelease }}
          draft: false
