name: Sync Release to Production

on:
  release:
    types: [ published ]

jobs:
  sync-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: üöö Checkout development repository
        uses: actions/checkout@v4

      - name: üöö Checkout release repository
        uses: actions/checkout@v4
        with:
          repository: wtl-public/hio-typo3-connector
          path: release-repo
          token: ${{ secrets.RELEASE_REPO_TOKEN }}
          ref: main

      - name: ‚¨ÜÔ∏è 3. Commit and push to release repository
        run: |
          # Bricht das Skript bei Fehlern sofort ab
          set -e

          echo "Wechsle in das Verzeichnis 'release-repo'..."
          cd release-repo
          
          echo "√úberpr√ºfe die Git-Remote-Konfiguration:"
          git remote -v
          # Die obige Zeile MUSS auf dein RELEASE-REPO zeigen!

          echo "Konfiguriere Git-Benutzer..."
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          echo "Synchronisiere Dateien..."
          # Wir l√∂schen und kopieren jetzt hier, direkt im richtigen Verzeichnis
          find . -mindepth 1 ! -name '.git' -exec rm -rf {} +
          rsync -av --progress ../ ./ --exclude .git --exclude .github

          echo "F√ºge √Ñnderungen zum Commit hinzu..."
          git add .

          # Commit nur, wenn es √Ñnderungen gibt
          if ! git diff --staged --quiet; then
            echo "√Ñnderungen gefunden. Erstelle Commit und pushe..."
            git commit -m "chore: Sync from development release ${{ github.event.release.tag_name }}"
            git push origin HEAD:refs/heads/main # Anpassen, falls dein Branch 'master' hei√üt
          else
            echo "Keine Datei√§nderungen zum Committen."
          fi

      - name: üéâ Create Release in release repository
        uses: softprops/action-gh-release@v2
        with:
          repository: wtl-public/hio-typo3-connector
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.name }}
          body: ${{ github.event.release.body }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.RELEASE_REPO_TOKEN }}
